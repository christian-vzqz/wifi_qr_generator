name: PR Checks

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]

# Cancel in-progress workflows on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Skip checks for draft PRs unless explicitly requested
  check-ready:
    name: Check if PR is ready
    runs-on: ubuntu-latest
    outputs:
      ready: ${{ steps.check.outputs.ready }}
    steps:
      - name: Check PR status
        id: check
        run: |
          if [[ "${{ github.event.pull_request.draft }}" == "true" ]]; then
            echo "ready=false" >> $GITHUB_OUTPUT
            echo "PR is in draft mode, skipping checks"
          else
            echo "ready=true" >> $GITHUB_OUTPUT
            echo "PR is ready for review, running checks"
          fi

  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    needs: check-ready
    if: needs.check-ready.outputs.ready == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint

      - name: Check Prettier formatting
        run: pnpm run format:check

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: check-ready
    if: needs.check-ready.outputs.ready == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test:run

      - name: Build project
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    needs: check-ready
    if: needs.check-ready.outputs.ready == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for security vulnerabilities
        run: pnpm audit --audit-level high
        continue-on-error: true

      - name: Check for outdated dependencies
        run: pnpm outdated
        continue-on-error: true

  # Summary job that other workflows can depend on
  pr-checks-summary:
    name: PR Checks Summary
    runs-on: ubuntu-latest
    needs: [check-ready, lint-and-format, build-test, dependency-check]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.check-ready.outputs.ready }}" == "false" ]]; then
            echo "✅ PR is in draft mode, checks skipped"
            exit 0
          fi

          # Check if any required job failed
          if [[ "${{ needs.lint-and-format.result }}" == "failure" ]] || \
             [[ "${{ needs.build-test.result }}" == "failure" ]]; then
            echo "❌ PR checks failed"
            exit 1
          else
            echo "✅ All PR checks passed"
            exit 0
          fi
